name: MSBuild

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: msvc/Socket.sln

  # Configuration type to build (e.g., Release, Debug, or custom like Release_OpenSSL).
  BUILD_CONFIGURATION: Release_OpenSSL

  VCPKG_BUILD_TYPE: release
  # Enable vcpkg binary cache archives storage
  VCPKG_BINARY_SOURCES: "clear;files,${{ github.workspace }}/.vcpkg-cache,readwrite"

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Cache vcpkg archives
        uses: actions/cache@v4
        with:
          # Path where vcpkg stores built archives on Windows
          path: C:/Users/runneradmin/AppData/Local/vcpkg/archives
          key: ${{ runner.os }}-vcpkg-archives-${{ env.BUILD_CONFIGURATION }}-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-archives-

      - name: Ensure vcpkg cache dir exists
        run: |
          if not exist "C:/Users/runneradmin/AppData/Local/vcpkg/archives" mkdir "C:/Users/runneradmin/AppData/Local/vcpkg/archives"
        shell: cmd

      - name: Set up vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          .\vcpkg\bootstrap-vcpkg.bat
        shell: cmd

      - name: Integrate vcpkg
        run: .\vcpkg\vcpkg integrate install
        shell: cmd

      - name: Install dependencies
        run: .\vcpkg\vcpkg install --triplet x64-windows
        shell: cmd

      - name: Restore NuGet packages
        run: |
          nuget restore %SOLUTION_FILE_PATH%
        shell: cmd

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Build solution
        run: |
          msbuild %SOLUTION_FILE_PATH% /m /p:Configuration=%BUILD_CONFIGURATION%
        shell: cmd
